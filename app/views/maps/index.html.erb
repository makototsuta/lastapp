<div class="container">
  <h3>周辺心霊マップ</h3>
  <div id="gmap" style="height:400px"></div> <!-- 地図を表示する領域 -->
</div>


<script>
function initMap() {
  var target = document.getElementById('gmap');
  //マップを生成して表示
  var map = new google.maps.Map(document.getElementById('gmap'), {
    center: {lat: 35.681167, lng: 139.767052},
    zoom: 15
  });

  //情報ウィンドウのインスタンスの生成
  var infoWindow = new google.maps.InfoWindow;

  //ブラウザが Geolocation に対応しているかを判定
  //対応していない場合の処理
  if(!navigator.geolocation){
    //情報ウィンドウの位置をマップの中心位置に指定
    infoWindow.setPosition(map.getCenter());
    //情報ウィンドウのコンテンツを設定
    infoWindow.setContent('Geolocation に対応していません。');
    //情報ウィンドウを表示
    infoWindow.open(map);
  }

  //ブラウザが対応している場合、position にユーザーの位置情報が入る
  navigator.geolocation.getCurrentPosition(function(position) {
    //position から緯度経度（ユーザーの位置）のオブジェクトを作成し変数に代入
    var pos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
    };
    //情報ウィンドウに現在位置を指定
    infoWindow.setPosition(pos);
    //情報ウィンドウのコンテンツを設定
    infoWindow.setContent('現在位置を取得しました。');
    //情報ウィンドウを表示
    infoWindow.open(map);
    //マップの中心位置を指定
    map.setCenter(pos);

    var myCircle = new google.maps.Circle({
    strokeColor: '#0088ff',
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: '#0088ff',
    fillOpacity: 0.35,
    map: map,
    center: pos,
    radius: 500
  });

  }, function() {  //位置情報の取得をユーザーがブロックした場合のコールバック
    //情報ウィンドウの位置をマップの中心位置に指定
    infoWindow.setPosition(map.getCenter());
    //情報ウィンドウのコンテンツを設定
    infoWindow.setContent('Error: Geolocation が無効です。');
    //情報ウィンドウを表示
    infoWindow.open(map);
  });

  //DirectionsService のオブジェクトを生成
 var directionsService = new google.maps.DirectionsService();

 //DirectionsRenderer のオブジェクトを生成
 var directionsRenderer = new google.maps.DirectionsRenderer();

 //directionsRenderer と地図を紐付け
 directionsRenderer.setMap(map);

 // ルートを取得するリクエスト
 var request = {
   origin: "京急上大岡自動車学校",      // 出発地点の緯度経度
   destination: "上大岡駅",   // 到着地点の緯度経度
   travelMode: 'WALKING' //トラベルモード（歩き）
 };

 //DirectionsService のオブジェクトのメソッド route() にリクエストを渡し、
 //コールバック関数で結果を setDirections(result) で directionsRenderer にセットして表示
 directionsService.route(request, function(result, status) {
   //ステータスがOKの場合、
   if (status === 'OK') {
     directionsRenderer.setDirections(result); //取得したルート（結果：result）をセット
   }else{
     alert("取得できませんでした：" + status);
   }
 });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBnqmYC6AIMWBOAv8WcT51MO9pHnfTcj4M&callback=initMap" async defer></script><!-- YOUR_API_KEYの部分は取得した APIキーで置き換えます -->

<div class="container">
  <h4>心霊スポット一覧</h4>
  <table>
    <tr>
      <th>地名</th>
      <th>住所</th>
      <th>恐怖度</th>
    </tr>
  <% @maps.each do |map| %>
    <tr>
      <td><%= map.name %></td>
      <td><%= map.address %></td>
      <td><%= map.horror_level %></td>
      <td><%= link_to '詳細', map_path(map.id) %></td>
      <td><%= link_to "編集", edit_map_path(map.id) %></td>
      <td><%= link_to '削除', map_path(map.id), method: :delete, data: { confirm: '本当に削除していいですか？' } %></td>
    </tr>
  <% end %>
  </table>
</div>
